// ============================================================================
// catalina.corepolicy - Security Policy Permissions for Tomcat 5
//
// This file contains a default set of security policies to be enforced (by the
// JVM) when Catalina is executed with the "-security" option.  In addition
// to the permissions granted here, the following additional permissions are
// granted to the codebase specific to each web application:
//
// * Read access to the document root directory
//
// $Id: tomcat5.policy,v 1.11 2009/01/28 21:27:57 alibj Exp $
// ============================================================================
// 07-Oct-08	olsok		Code-801	reconcile with Tomcat 6, fix Java 6 xalan issues with prsysmgmt
// 06-Oct-08	solom		Task-2443	fix previous update
// 17-Sep-08	solom		Task-2443	correct settings for prsysmgmt
// 02-Jul-08	olsok		Code-748	add tomcat-juli permissions for later 5.5.x distributions
// 04-Jun-07	olsok		Code-322	PegaRULES 5.4
// 14-Sep-05	GajnJ					Ensure we can read/write to the tempdir
// 17-Aug-05	solom		R-18773		add getProtectionDomain permission
// 12-Aug-05	olsok		R-18694		adjusted based on classloader changes
// 09-Aug-05	olsok		R-18694		configure PegaRULES permissions
// 09-Aug-05	olsok		R-18694		base policy on Tomcat 5.5.7 distribution

// The PegaRULES polices coded in this file assume that the PegaRULES
// application is deployed as an expanded war file within the Tomcat
// webapps directory.
//
// PegaRULES policies use the following variables that should be supplied
// as Java system properties at runtime:
//		java.home				(Standard Java property)
//		java.io.tmpdir			(Standard Java property)
//		catalina.home			(Standard Tomcat property)
//		pega.context_root		name of the context root (i.e. directory under webapps
//								in which PegaRULES is located)
//		pega.tmpdir				path to writable temp directory that PegaRULES
//								should use (as specified in prconfig.xml), using
//								host-specific path delimiters

// ========== SYSTEM CODE PERMISSIONS =========================================


// These permissions apply to javac
grant codeBase "file:${java.home}/lib/-" {
        permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions
grant codeBase "file:${java.home}/jre/lib/ext/-" {
        permission java.security.AllPermission;
};

// These permissions apply to javac when ${java.home] points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/../lib/-" {
        permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions when
// ${java.home} points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/lib/ext/-" {
        permission java.security.AllPermission;
};


// ========== CATALINA CODE PERMISSIONS === (Tomcat 5.5.23) ====================

// These permissions apply to the launcher code
grant codeBase "file:${catalina.home}/bin/commons-launcher.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the daemon code
grant codeBase "file:${catalina.home}/bin/commons-daemon.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the commons-logging API
grant codeBase "file:${catalina.home}/bin/commons-logging-api.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the logging API (in later versions of Tomcat 5.5.x)
grant codeBase "file:${catalina.home}/bin/tomcat-juli.jar" {
        permission java.util.PropertyPermission "java.util.logging.config.class", "read";
        permission java.util.PropertyPermission "java.util.logging.config.file", "read";
        permission java.lang.RuntimePermission "shutdownHooks";
        permission java.io.FilePermission "${catalina.base}${file.separator}conf${file.separator}logging.properties", "read";
        permission java.util.PropertyPermission "catalina.base", "read";
        permission java.util.logging.LoggingPermission "control";
        permission java.io.FilePermission "${catalina.base}${file.separator}logs", "read, write";
        permission java.io.FilePermission "${catalina.base}${file.separator}logs${file.separator}*", "read, write";
        permission java.lang.RuntimePermission "getClassLoader";
        // To enable per context logging configuration, permit read access to the appropriate file.
        // Be sure that the logging configuration is secure before enabling such access
        // eg for the examples web application:
        // permission java.io.FilePermission "${catalina.base}${file.separator}webapps${file.separator}examples${file.separator}WEB-INF${file.separator}classes${file.separator}logging.properties", "read";
        
        // 01-Jul-08 allow java.util.TimeZone to set its internal static default timezone field
        // instead of having to fallback to a threadlocal version (because the first caller of TimeZone.getDefault() doesn't have the
        // requisite permission).
        permission java.util.PropertyPermission "user.timezone", "write";
        // java.util.logging needs the following
        permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
};

// These permissions apply to the server startup code
grant codeBase "file:${catalina.home}/bin/bootstrap.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the JMX server
grant codeBase "file:${catalina.home}/bin/jmx.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the servlet API classes
// and those that are shared across all class loaders
// located in the "common" directory
grant codeBase "file:${catalina.home}/common/-" {
        permission java.security.AllPermission;
};

// These permissions apply to the container's core code, plus any additional
// libraries installed in the "server" directory
grant codeBase "file:${catalina.home}/server/-" {
        permission java.security.AllPermission;
};

// The permissions granted to the balancer WEB-INF/classes directory
grant codeBase "file:${catalina.home}/webapps/balancer/WEB-INF/classes/-" {
        permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.util.digester";
        permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.util.digester.*";
};
// OLSOK: catalina.policy file from 5.5.7 and 5.5.9 does not include this, but it is needed...
grant codeBase "file:${catalina.home}/webapps/balancer/WEB-INF/lib/-" {
        permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.util.digester";
        permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.util.digester.*";
};
// ========== WEB APPLICATION PERMISSIONS =====================================


// These permissions are granted by default to all web applications
// In addition, a web application will be given a read FilePermission
// and JndiPermission for all files and directories in its document root.
grant {
// 01-Jul-08 PegaRULES grants permission to read ALL properties below
// so to shorten the permissions list and (hopefully) reduce lookup time
// comment out explicit PropertyPermissions. Retain comments for documentation. 
    // Required for JNDI lookup of named JDBC DataSource's and
    // javamail named MimePart DataSource used to send mail
//  permission java.util.PropertyPermission "java.home", "read";
//  permission java.util.PropertyPermission "java.naming.*", "read";
//  permission java.util.PropertyPermission "javax.sql.*", "read";

    // OS Specific properties to allow read access
//  permission java.util.PropertyPermission "os.name", "read";
//  permission java.util.PropertyPermission "os.version", "read";
//  permission java.util.PropertyPermission "os.arch", "read";
//  permission java.util.PropertyPermission "file.separator", "read";
//  permission java.util.PropertyPermission "path.separator", "read";
//  permission java.util.PropertyPermission "line.separator", "read";

    // JVM properties to allow read access
//  permission java.util.PropertyPermission "java.version", "read";
//  permission java.util.PropertyPermission "java.vendor", "read";
//  permission java.util.PropertyPermission "java.vendor.url", "read";
//  permission java.util.PropertyPermission "java.class.version", "read";
//	permission java.util.PropertyPermission "java.specification.version", "read";
//	permission java.util.PropertyPermission "java.specification.vendor", "read";
//	permission java.util.PropertyPermission "java.specification.name", "read";

//	permission java.util.PropertyPermission "java.vm.specification.version", "read";
//	permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
//	permission java.util.PropertyPermission "java.vm.specification.name", "read";
//	permission java.util.PropertyPermission "java.vm.version", "read";
//	permission java.util.PropertyPermission "java.vm.vendor", "read";
//	permission java.util.PropertyPermission "java.vm.name", "read";

    // Required for OpenJMX
    permission java.lang.RuntimePermission "getAttribute";

	// Allow read of JAXP compliant XML parser debug
//	permission java.util.PropertyPermission "jaxp.debug", "read";

    // Precompiled JSPs need access to this package.
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime";
    permission java.lang.RuntimePermission "accessClassInPackage.org.apache.jasper.runtime.*";
    
};

// You can assign additional permissions to particular web applications by
// adding additional "grant" entries here, based on the code base for that
// application, /WEB-INF/classes/, or /WEB-INF/lib/ jar files.
//
// Different permissions can be granted to JSP pages, classes loaded from
// the /WEB-INF/classes/ directory, all jar files in the /WEB-INF/lib/
// directory, or even to individual jar files in the /WEB-INF/lib/ directory.
//
// For instance, assume that the standard "examples" application
// included a JDBC driver that needed to establish a network connection to the
// corresponding database and used the scrape taglib to get the weather from
// the NOAA web server.  You might create a "grant" entries like this:
//
// The permissions granted to the context root directory apply to JSP pages.
// grant codeBase "file:${catalina.home}/webapps/examples/-" {
//      permission java.net.SocketPermission "dbhost.mycompany.com:5432", "connect";
//      permission java.net.SocketPermission "*.noaa.gov:80", "connect";
// };
//
// The permissions granted to the context WEB-INF/classes directory
// grant codeBase "file:${catalina.home}/webapps/examples/WEB-INF/classes/-" {
// };
//
// The permission granted to your JDBC driver
// grant codeBase "jar:file:${catalina.home}/webapps/examples/WEB-INF/lib/driver.jar!/-" {
//      permission java.net.SocketPermission "dbhost.mycompany.com:5432", "connect";
// };
// The permission granted to the scrape taglib
// grant codeBase "jar:file:${catalina.home}/webapps/examples/WEB-INF/lib/scrape.jar!/-" {
//      permission java.net.SocketPermission "*.noaa.gov:80", "connect";
// };

// ========================================================================================
// PegaRULES V5.5 configuration follows (07-Oct-2008)
// (assumes the jdbc jar files have been copied to ${catalina.home}/lib)
grant {
	// per J2EE spec, privileges granted to all J2EE components
	permission java.lang.RuntimePermission "queuePrintJob"; 
	permission java.net.SocketPermission "*", "connect"; 
	permission java.util.PropertyPermission "*", "read";
	
	// Named instances of SQL/Server 2005 require the following additional permissions
	// (that apparently are not needed for default instances)
	permission java.net.SocketPermission "*", "resolve,listen,accept"; 
	
};


// SMA client start ===================================================================
grant codebase "file:${catalina.home}/webapps/prsysmgmt/WEB-INF/lib/-" {
	permission java.io.FilePermission "${user.home}${file.separator}Nodes.xml", "read";
	permission java.lang.RuntimePermission "accessDeclaredMembers";

	permission javax.management.MBeanPermission "-#-[-]", "queryNames";
	permission javax.management.MBeanPermission "*#*[]", "queryNames";
	permission javax.management.MBeanServerPermission "findMBeanServer";
	permission javax.management.MBeanPermission "-#-[-]", "queryMBeans";
	permission javax.management.MBeanPermission "*#*[]", "queryMBeans";
	permission javax.management.MBeanPermission "*#*[]", "getAttribute";
	permission javax.management.MBeanPermission "*#*[]", "invoke";
	permission javax.management.MBeanPermission "*#*[]", "getMBeanInfo";

	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}lib${/}-", "read";		// granted by Tomcat
	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}classes", "read";		// granted by Tomcat
	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}classes${/}-", "read";	// granted by Tomcat
	permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
	permission java.lang.RuntimePermission "defineClassInPackage.java.lang";
	
	permission java.lang.RuntimePermission "getClassLoader";
	permission java.lang.RuntimePermission "modifyThreadGroup";

	// for Java 6 xalan / BCEL permissions issue
	permission java.io.FilePermission "${java.home}${/}-", "read";					// for jre jars
	permission java.io.FilePermission "${java.home}${/}..${/}lib${/}-", "read";		// for tools.jar
	permission java.io.FilePermission "${catalina.home}${/}-", "read";				// for classpath entries
	permission java.io.FilePermission "C:${/}Windows${/}Sun${/}Java${/}lib${/}-", "read";		// Sigh... this too is on java.ext.path
	// and these are needed for IBM Java 6 xalan permissions issue
	permission java.lang.RuntimePermission "createClassLoader";
	permission java.lang.RuntimePermission "getProtectionDomain";
};
// modify as necessary to point to the correct location of SMA's temp directory 
grant codebase "file:${catalina.home}${/}work${/}Standalone${/}localhost${/}prsysmgmt${/}-" {
	permission java.lang.RuntimePermission "accessDeclaredMembers";
	permission java.lang.RuntimePermission "defineClassInPackage.org.apache.jasper.runtime";
};
grant codebase "file:${catalina.home}${/}work${/}Catalina${/}localhost${/}prsysmgmt${/}-" {
	permission java.lang.RuntimePermission "accessDeclaredMembers";
	permission java.lang.RuntimePermission "defineClassInPackage.org.apache.jasper.runtime";
};
// SMA client end =====================================================================

grant codebase "file:${catalina.home}/webapps/${pega.context_root}/WEB-INF/lib/-" {
	// the following needed to probe for user-specific prconfig/prlogging files
	permission java.io.FilePermission "${user.home}${/}*", "read";

	// the following needed for BaseLogger logging
	permission java.util.logging.LoggingPermission "control", "";

	// the following needed for PRBootLoader and PRAppLoader
//	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}lib${/}-", "read";		// granted by Tomcat
//	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}classes", "read";		// granted by Tomcat
//	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}classes${/}-", "read";	// granted by Tomcat
	permission java.lang.RuntimePermission "createClassLoader";					// also needed by Axis
	permission java.lang.RuntimePermission "getClassLoader";
	permission java.lang.RuntimePermission "getProtectionDomain";
	permission java.security.SecurityPermission "getPolicy";
	// needed by PRAppLoader during resource cleanup
	permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
	permission java.lang.RuntimePermission "modifyThread";

	// the following needed to register the Bouncy Castle JCE provider
	permission java.security.SecurityPermission "putProviderProperty.BC";
	permission java.security.SecurityPermission "insertProvider.BC";
	permission java.security.SecurityPermission "removeProvider.BC";

	// the following needed for access to default temp directories
//	permission java.io.FilePermission "${catalina.home}${/}work${/}Catalina${/}localhost${/}${pega.context_root}", "read";		// granted by Tomcat - read,write
//	permission java.io.FilePermission "${catalina.home}${/}work${/}Catalina${/}localhost${/}${pega.context_root}${/}-", "read";	// granted by Tomcat - read,write,delete
	
	// the following needed to avoid error (messages) when normalizing file specifications during initialization
//	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}", "read";							// granted by Tomcat
	permission java.io.FilePermission "${catalina.home}${/}temp", "read";														// Tomcat's modified java.io.tmpdir, need read access
	
	// the following needed for access to relocated temp and root directories
	permission java.io.FilePermission "${pega.tmpdir}", "read,write";
	permission java.io.FilePermission "${pega.tmpdir}${/}-", "read,write,delete";

	// the following needed to get PegaRULES host ip address
	permission java.net.SocketPermission "*", "resolve";
	
	// the following needed for JMX support
	permission javax.management.MBeanPermission "*#*[]", "getAttribute";
	permission javax.management.MBeanPermission "-#-[-]", "queryNames";
	permission javax.management.MBeanPermission "*#*[]", "queryNames";
	permission javax.management.MBeanPermission "com.pega.*#*[]", "registerMBean";
	permission javax.management.MBeanPermission "com.pega.*#*[]", "unregisterMBean";
	permission javax.management.MBeanServerPermission "findMBeanServer";
	permission javax.management.MBeanTrustPermission "register";
	permission mx4j.server.MBeanPermission "-#-[-]", "queryNames";		// for Tomcat with Java 1.4.2 using mx4j
	permission java.lang.management.ManagementPermission "control";		// for JVMNotificationManagerBase - set threshholds
	permission java.lang.RuntimePermission "modifyThreadGroup";				// for Thread Management
	
	// the following needed for access to Tomcat common/* jars and classes
	permission java.io.FilePermission "${catalina.home}${/}common${/}-", "read";

	// the following needed by various 3rd party libraries (e.g. axis)
	permission java.io.FilePermission "${catalina.home}${/}bin${/}*", "read";	// for commons-logging-api.jar
	permission java.lang.RuntimePermission "accessDeclaredMembers";

	// the following needed for the embedded Eclipse compiler
	// Note that under Java 6 the property "java.ext.dirs" is a path-like list and on Windows
	// will include the jre under c:\Windows as well as the jre specified by "java.home".
	// One may need to grant explicit permissions for the additional locations (Pega customized
	// Eclipse compiler v3.3 should silently ignore directories to which it doesn't have read
	// access, but an unmodified compiler is not so tolerant.)
	permission java.io.FilePermission "${java.home}", "read";
	permission java.io.FilePermission "${java.home}${/}-", "read";	// for compiler jars
	
	// the following needed to locate the javac compiler when ${java.home} points to a jre
	// if one wishes to use javac instead of the embedded Eclipse compiler
	permission java.io.FilePermission "${java.home}${/}..${/}-", "read";
		
	// the following needed for embedded JSP compilation
	permission java.lang.RuntimePermission "setContextClassLoader";
	permission java.lang.RuntimePermission "setIO";
	permission java.lang.RuntimePermission "accessClassInPackage.sun.beans.infos";
		
	// the following needed to get CPU timings in PAL
	permission java.lang.RuntimePermission "loadLibrary.${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}binredist${/}x86${/}pr3native.dll";
	permission java.lang.RuntimePermission "loadLibrary.${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}binredist${/}ppc${/}pr3native.so";
	permission java.lang.RuntimePermission "loadLibrary.${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}binredist${/}sparc${/}pr3native.so";
	// needed for performance timings using JVM facilities rather than the Pega shared libraries
	permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
	permission java.lang.RuntimePermission "sun.misc.Perf.getPerf";
	// needed for thread dumps
	permission java.lang.RuntimePermission "getStackTrace";

	// the following needed to query the web-tier character encoding and display error pages
	permission java.lang.RuntimePermission "accessClassInPackage.org.apache.catalina.connector";
	permission java.lang.RuntimePermission "accessClassInPackage.org.apache.catalina.core";
	permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";

	// the following needed for access to jdbc datasources
	permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.dbcp.collections";
	permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.dbcp.*";
	permission java.lang.RuntimePermission "accessClassInPackage.sun.jdbc.odbc";
	
	// the following needed for Microsoft SQL/Server jdbc drivers located in common/lib
	permission java.io.FilePermission "${catalina.home}${/}common${/}lib${/}*", "read";
	permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";
	
	// need permissions for Lucene index directories - what precisely needed?
	// permission java.io.FilePermission "CUSTOMIZE ME", "read";

};

grant codebase "file:${pega.tmpdir}/-" {
	// the following needed so that assembled/generated code can access PegaRULES jar files
	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}lib${/}-", "read";
	permission java.io.FilePermission "${catalina.home}${/}webapps${/}${pega.context_root}${/}WEB-INF${/}classes${/}-", "read";

	// the following needed for access to Tomcat common/* jars and classes
	permission java.io.FilePermission "${catalina.home}${/}common${/}-", "read";
	
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	// the following needed by assembled/generated code to access PegaRULES "temporary" files
	permission java.io.FilePermission "${pega.tmpdir}${/}-", "read,write,delete";
	// the following needed until PegaRULES database logic updated with doPrivileged blocks
	permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	
};

